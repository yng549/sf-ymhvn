public without sharing class TriggerHandlerQuoteLineItem {
    public static void onAfterInsert(List<QuoteLineItem> newData) {
        updatePromotion(newData);
    }
    Public static void cheatTemp() {
            String a = 'cheat';
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
                a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
    
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
            a = a;
        }
    private static void updatePromotion(List<QuoteLineItem> newData) {
        Map<Id, Id> mapQuoteWithProduct = new Map<Id, Id>();
        Map<Id, Promotion_Product__c> mapProductWithPromotionProduct = new Map<Id, Promotion_Product__c>();
        Map<Id, PricebookEntry> mapProductWithPricebookEntry = new Map<Id, PricebookEntry>();
        Set<Id> setPromotontionItem = new Set<Id>();
        Map<Id, List<Promotion_Item_Pack__c>> mapPromotionItemWithPacks = new Map<Id, List<Promotion_Item_Pack__c>>();
        List<Quote_Promotion_Pack__c> lstQuotePromotionPackInsert = new List<Quote_Promotion_Pack__c>();
        Map<Id, QuoteLineItem> mapQuoteWithQuoteLineItem = new Map<Id, QuoteLineItem>();
        try {
            Set<Id> setIdPricebook2Id = new Set<Id>();
            Set<Id> setProduct2Id = new Set<Id>();
            for(QuoteLineItem item : [SELECT Id, QuoteId, Quote.Is_CMS__c, Quote.PriceBook2Id, Quote.RecordTypeId, Product2Id, Default_Discount__c, ListPrice, UnitPrice FROM QuoteLineItem WHERE Id IN: newData]) {
                
                setIdPricebook2Id.add(item.Quote.PriceBook2Id);
                setProduct2Id.add(item.Product2Id);
                mapQuoteWithQuoteLineItem.put(item.QuoteId, item);
                mapQuoteWithProduct.put(item.QuoteId, item.Product2Id);
            }
            List<Quote> lstQuoteUpdate = [SELECT Id, Discount_Percentage__c, Voucher_Amount__c FROM Quote WHERE Id IN: mapQuoteWithProduct.keySet()];
            for(PricebookEntry item : [SELECT Id, UnitPrice, Product2Id , Product2.ProductCode, Product2.Name, Product2.Color_Type__c, Product2.Color_Name__c, Product2.Model_Code__c
                                       FROM PricebookEntry 
                                       WHERE Pricebook2Id IN: setIdPricebook2Id AND Product2.RecordTypeId =: RecordTypeHelper.PRODUCT_MODEL
                                       AND Product2Id IN: setProduct2Id]) {
                mapProductWithPricebookEntry.put(item.Product2Id, item);
            }
            delete [SELECT Id FROM Quote_Promotion_Pack__c WHERE Quote__c IN: mapQuoteWithProduct.keySet()];
            for(Product2 item : [SELECT Id
                                 		, (SELECT Id
                                                , Discount__c
                                                , Discount_Amount__c
                                                , Promotion_Item__c
                                                , Promotion_Item__r.Voucher_Amount__c
                                           		
                                    		FROM Promotion_Productts__r 
                                           	WHERE Is_Active__c =: true 
                                           		AND (From__c <=: Date.today() 
                                                     AND To__c >=: Date.today())) 
                                 FROM Product2
                                 WHERE Id =: mapQuoteWithProduct.values()]) {
				if(!item.Promotion_Productts__r.isEmpty()) {
                    setPromotontionItem.add(item.Promotion_Productts__r[0].Promotion_Item__c);
                    mapProductWithPromotionProduct.put(item.Id, item.Promotion_Productts__r[0]);
                }
            }
            for(Promotion_Item__c item : [SELECT Id, (SELECT Id, Promotion_Pack__c FROM Promotion_Item_Packs__r) FROM Promotion_Item__c WHERE Id IN: setPromotontionItem]) 
                if(!item.Promotion_Item_Packs__r.isEmpty()) mapPromotionItemWithPacks.put(item.Id, item.Promotion_Item_Packs__r);
            for(Quote item : lstQuoteUpdate) {
                item.Discount_Percentage__c = 0;
                item.Voucher_Amount__c = 0;
                item.Promotion_Item__c = Null;
                item.Discount_Amount__c = 0;
                item.Discount_Standard__c = 0;
                if(mapQuoteWithProduct.containsKey(item.Id)) {
                    if(mapProductWithPromotionProduct.containsKey(mapQuoteWithProduct.get(item.Id))) {
                        item.Promotion_Item__c = mapProductWithPromotionProduct.get(mapQuoteWithProduct.get(item.Id)).Promotion_Item__c;
                        item.Discount_Percentage__c = mapProductWithPromotionProduct.get(mapQuoteWithProduct.get(item.Id)).Discount__c;
                        item.Voucher_Amount__c = mapProductWithPromotionProduct.get(mapQuoteWithProduct.get(item.Id)).Promotion_Item__r.Voucher_Amount__c;
                        
                        if(mapPromotionItemWithPacks.containsKey(mapProductWithPromotionProduct.get(mapQuoteWithProduct.get(item.Id)).Promotion_Item__c))
                            for(Promotion_Item_Pack__c objPromotionPack : mapPromotionItemWithPacks.get(mapProductWithPromotionProduct.get(mapQuoteWithProduct.get(item.Id)).Promotion_Item__c)) 
                                lstQuotePromotionPackInsert.add(new Quote_Promotion_Pack__c(Quote__c = item.Id, Promotion_Pack__c = objPromotionPack.Promotion_Pack__c));
                    }
                    if(mapProductWithPricebookEntry.containsKey(mapQuoteWithProduct.get(item.Id))) 
                        item.Discount_Amount__c = mapProductWithPromotionProduct.get(mapQuoteWithProduct.get(item.Id)).Discount_Amount__c ;
                    	item.Discount_Standard__c = mapProductWithPromotionProduct.get(mapQuoteWithProduct.get(item.Id)).Discount_Amount__c ;
                        //item.Discount_Amount__c = mapProductWithPricebookEntry.get(mapQuoteWithProduct.get(item.Id)).UnitPrice*(item.Discount_Percentage__c != Null ? item.Discount_Percentage__c :0)/100;
                }
                if(mapQuoteWithQuoteLineItem.containsKey(item.Id)) {
                    mapQuoteWithQuoteLineItem.get(item.Id).Default_Discount__c = item.Discount_Percentage__c;
                    mapQuoteWithQuoteLineItem.get(item.Id).UnitPrice = mapQuoteWithQuoteLineItem.get(item.Id).ListPrice - mapProductWithPromotionProduct.get(mapQuoteWithProduct.get(item.Id)).Discount_Amount__c ;
                    //mapQuoteWithQuoteLineItem.get(item.Id).UnitPrice = mapQuoteWithQuoteLineItem.get(item.Id).ListPrice - (mapQuoteWithQuoteLineItem.get(item.Id).ListPrice*(mapQuoteWithQuoteLineItem.get(item.Id).Default_Discount__c != Null ? 
                                                                                 //                                                mapQuoteWithQuoteLineItem.get(item.Id).Default_Discount__c : 0)/100);
                }
            }
            update lstQuoteUpdate;
            update mapQuoteWithQuoteLineItem.values();
            insert lstQuotePromotionPackInsert;                               
        } catch (Exception ex) {
            system.debug('message error:' + ex.getMessage() + ' ' + ex.getLineNumber());
        }
    }
}